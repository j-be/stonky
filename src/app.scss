@use 'sass:map';
@import '@picocss/pico/scss/pico'; /* To import only what you need from Pico [check the documentaion](https://picocss.com/docs/customization.html) */
/* Write your global styles here, in SCSS syntax. Variables and mixins from the src/variables.scss file are available here without importing */

html,
body {
	height: 100%;
}

body {
	display: flex;
	flex-direction: column;
}

.muted {
	--pico-color: var(--pico-muted-color);
	color: var(--pico-color);
}

.uppercase {
	text-transform: uppercase;
}

details,
summary,
.example {
	border-radius: var(--pico-border-radius);
}

details {
	&[open] {
		background-color: var(--pico-card-background-color);

		> summary {
			margin: 0;

			&:focus:not([role='button']) {
				color: var(--pico-accordion-open-summary-color);
			}
		}
	}

	table:last-child {
		margin: 0;
	}

	> summary {
		display: flex;
		background-color: var(--pico-card-sectioning-background-color);
		padding: calc(var(--pico-spacing));
		white-space: nowrap;

		&:focus:not([role='button']) {
			color: var(--pico-accordion-close-summary-color);
		}

		&::after {
			flex-shrink: 0;
		}

		> .title {
			display: flex;
			flex-grow: 1;
			gap: calc(var(--pico-spacing));
		}
	}

	.disclaimer {
		display: flex;
		flex-direction: column;
		gap: calc(var(--pico-spacing));
		margin: calc(var(--pico-spacing));
		* {
			margin: 0;
		}
	}

	.hideButton {
		display: flex;
		justify-content: end;

		button {
			width: initial;
			margin: calc(var(--pico-spacing));
		}
	}
}

.action-buttons {
	display: grid;
	grid-template-columns: 1fr 1fr;
	column-gap: calc(var(--pico-spacing));
}

.danger-zone {
	div.entry {
		display: flex;
		flex-direction: row;
		padding: calc(var(--pico-spacing));

		> div:first {
			flex-grow: 1;
			display: flex;
			flex-direction: column;
		}
	}

	button {
		background-color: var(--pico-del-color);
		border-color: var(--pico-form-element-invalid-border-color);
		margin-bottom: 0;
	}
}

body div.vest-row {
	display: flex;
	flex-direction: row;
	gap: 15px;
	padding-bottom: calc(var(--pico-spacing));
	white-space: nowrap;

	* {
		margin: auto;
	}

	input {
		margin-bottom: 0;
	}

	> div:last-child {
		flex-grow: 1;
	}

	> *:first-child {
		width: 33%;
	}
}

.vesting-period {
	display: flex;

	input {
		flex-shrink: 5;
	}

	select {
		flex-shrink: 3;
	}
}

.overview {
	padding-top: calc(var(--pico-spacing));
	padding-bottom: calc(var(--pico-spacing));
	margin-bottom: calc(var(--pico-spacing));

	> header {
		padding: calc(var(--pico-spacing));
		margin-bottom: calc(var(--pico-spacing));
	}

	table {
		margin-bottom: 0;
	}
}

.icon::after {
	background-color: currentColor;
	content: '';
	padding: 0 0.5em;
	margin: 0 0.125rem;
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	-webkit-mask-position: center;
	mask-position: center;
	clip-path: padding-box;
}

.icon.settings::after {
	-webkit-mask-image: url('$lib/assets/gear.svg');
	mask-image: url('$lib/assets/gear.svg');
}

.icon.add::after {
	-webkit-mask-image: url('$lib/assets/plus.svg');
	mask-image: url('$lib/assets/plus.svg');
}

.icon.edit::after {
	-webkit-mask-image: url('$lib/assets/pen-to-square.svg');
	mask-image: url('$lib/assets/pen-to-square.svg');
}

a[target='_blank'] {
	font-weight: bold;
	&::after {
		@extend .icon;
		-webkit-mask-image: url('$lib/assets/arrow-up-right-from-square.svg');
		mask-image: url('$lib/assets/arrow-up-right-from-square.svg');
	}
}

body div:first-child > main {
	flex-grow: 1;
	padding: 0;
	padding-top: calc(var(--pico-spacing) * 6);
}

nav {
	position: fixed;
	width: 100%;
	padding: calc(var(--pico-spacing));
	background-color: var(--pico-card-background-color);
	box-shadow: 0px -10px 20px 0px black;
	z-index: 10;

	div.container {
		margin: auto;
	}

	h1 {
		margin: 0;
		@media screen and (max-width: map.get($breakpoints, 'sm', 'breakpoint')) {
			width: 100%;
			text-align: center;
		}
	}
}

body div:first-child > footer {
	font-size: 0.75em;
	padding: calc(var(--pico-spacing)) 0;
	text-align: center;
	background-color: var(--pico-card-background-color);
	margin-top: calc(var(--pico-spacing));

	div.container {
		@extend .muted;
		margin: auto;
	}
}

.example {
	background-color: var(--pico-card-sectioning-background-color);
	padding: 7px;
}

.overflowing-table {
	max-height: 460px;

	thead {
		position: sticky;
		top: 0;
		background-color: var(--pico-card-background-color);
	}

	tfoot {
		@extend thead;
		bottom: 0;
	}
}

// Workarounds

td,
th {
	background-color: initial;
}

thead {
	z-index: 10;
}
